package core.thread;

/**
 * 就绪：创建了线程对象后，调用了线程的start()方法，此时线程只是进入了线程队列，等待获取CPU服务，具备了运行的条件，但并不一定已经开始运行了
 * 运行：处于就绪状态的线程，一旦获取了CPU资源，便进入到运行状态，开始执行run()方法里面的逻辑
 * 阻塞：一个正在执行的线程在某些情况下，由于某些原因而暂时让出了CPU资源，暂停了自己的执行，便进入了阻塞状态，如调用了sleep()方法
 */


/**
 * 守护线程
 * 1、通过调用Thread类的setDaemon(true)方法设置当前线程为守护线程
 * 2、setDaemon(true)必须在start()方法之前调用
 * 3、在守护线程中产生的新线程也是守护线程
 * 4、不是所有的任务都可以分配给守护线程来执行，比如读写操作或计算逻辑
 */

/**
 * Java内存模型(Java Memory Model JMM)
 * 1、描述了Java程序中各种变量(线程共享变量)的访问规则，以及在JVM中将变量存储到内存和从内存中读取出变量这样的底层细节
 * 2、所有的变量都存储在主内存中；每个线程都有自己独立的工作内存，里面保存该线程使用到的变量的副本(主内存中该变量的一份拷贝)
 * 3、线程对共享变量的所有操作都必须在自己的工作内存中进行，不能直接从主内存中读写
 * 4、不同线程之间无法直接访问其他线程工作内存中的变量，线程间变量值的传递需要通过主内存来完成
 */
